apiVersion: apps/v1
kind: Deployment
metadata:
  name: rw-nerf-desktop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nerf
  template:
    metadata:
      labels:
        app: nerf
    spec:
      hostname: egl
      containers:
      - name: egl
        image: ghcr.io/selkies-project/nvidia-egl-desktop:latest
        env:
        - name: TZ
          value: "UTC"
          # Keep to default unless you know what you are doing with VirtualGL, `VGL_DISPLAY` should be set to either `egl[n]`, or `/dev/dri/card[n]` only when the device was passed to the container
        - name: SIZEW
          #        - name: VGL_DISPLAY
          #          value: "egl"
          value: "1920"
        - name: SIZEH
          value: "1080"
        - name: REFRESH
          value: "60"
        - name: DPI
          value: "96"
        - name: CDEPTH
          value: "24"
        # Choose either `value:` or `secretKeyRef:` but not both at the same time
        - name: PASSWD
          #          value: "mypasswd"
          valueFrom:
            secretKeyRef:
              name: nerf-pass
              key: nerf-pass
              # Uncomment this to enable noVNC, disabing selkies-gstreamer and ignoring all its parameters except `BASIC_AUTH_PASSWORD`, which will be used for authentication with noVNC, `BASIC_AUTH_PASSWORD` defaults to `PASSWD` if not provided
        ###
        # selkies-gstreamer parameters, for additional configurations see lines that start with "parser.add_argument" in https://github.com/selkies-project/selkies-gstreamer/blob/master/src/selkies_gstreamer/__main__.py
        ###
        # Change `WEBRTC_ENCODER` to `x264enc` if you are using software fallback without allocated GPUs or your GPU doesn't support `H.264 (AVCHD)` under the `NVENC - Encoding` section in https://developer.nvidia.com/video-encode-and-decode-gpu-support-matrix-new
        - name: WEBRTC_ENCODER
          #        - name: NOVNC_ENABLE
          #          value: "true"
          # Additional view-only password only applicable to the noVNC interface, choose either `value:` or `secretKeyRef:` but not both at the same time
          #        - name: NOVNC_VIEWPASS
          #          value: "mypasswd"
          #          valueFrom:
          #            secretKeyRef:
          #              name: my-pass
          #              key: my-pass
          value: "nvh264enc"
        - name: WEBRTC_ENABLE_RESIZE
          value: "false"
        - name: ENABLE_BASIC_AUTH
          value: "true"
          # Defaults to `PASSWD` if unspecified, choose either `value:` or `secretKeyRef:` but not both at the same time
        ###
        # Uncomment below to use a TURN server for improved network compatibility
        ###
        - name: TURN_HOST
          #        - name: BASIC_AUTH_PASSWORD
          #          value: "mypasswd"
          #          valueFrom:
          #            secretKeyRef:
          #              name: my-pass
          #              key: my-pass
          value: "turn.nrp-nautilus.io"
        - name: TURN_PORT
          value: "3478"
        # Provide only `TURN_SHARED_SECRET` for time-limited shared secret authentication or both `TURN_USERNAME` and `TURN_PASSWORD` for legacy long-term authentication, but do not provide both authentication methods at the same time
        - name: TURN_SHARED_SECRET
          valueFrom:
            secretKeyRef:
              name: nerf-pass
              key: turn-secret
              #        - name: TURN_USERNAME
              #          value: "username"
        # Change to `tcp` if the UDP protocol is throttled or blocked in your client network, or when the TURN server does not support UDP
        - name: TURN_PROTOCOL
          # Choose either `value:` or `secretKeyRef:` but not both at the same time
          #        - name: TURN_PASSWORD
          #          value: "mypasswd"
          #          valueFrom:
          #            secretKeyRef:
          #              name: turn-password
          #              key: turn-password
          value: "tcp"
        # You need a valid hostname and a certificate from authorities such as ZeroSSL (Let's Encrypt may have issues) to enable this
        - name: TURN_TLS
          value: "false"
        stdin: true
        tty: true
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          limits:
            memory: 64Gi
            cpu: "16"
            nvidia.com/gpu: 1
          requests:
            memory: 16Gi
            cpu: 100m
            nvidia.com/gpu: 1
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /cache
          name: egl-cache-vol
        - mountPath: /home/user/persistent
          name: egl-root-vol
      dnsPolicy: None
      dnsConfig:
        nameservers:
        - 8.8.8.8
        - 8.8.4.4
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
      - name: egl-cache-vol
        persistentVolumeClaim:
          claimName: nerf-cache
      - name: egl-root-vol
        persistentVolumeClaim:
          claimName: nerf-storage
#        persistentVolumeClaim:
#          claimName: egl-root-vol
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: nvidia.com/gpu.product
                operator: In
                values:
                - NVIDIA-RTX-A6000
                - NVIDIA-GeForce-RTX-4090
                - NVIDIA-GeForce-RTX-3090
                - NVIDIA-A100-SXM4-80GB
                - NVIDIA-A100-SXM4-80GB-MIG-1g.10gb
                - NVIDIA-A100-PCIE-40GB
                - NVIDIA-A100-80GB-PCIe
                - NVIDIA-A100-80GB-PCIe-MIG-1g.10gb
              
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: kubernetes.io/hostname
      #           operator: In
      #           values:
      #           - k8s-gpu-1.ucsc.edu
      #           - k8s-gpu-2.ucsc.edu
      #           - k8s-gpu-3.ucsc.edu
      #           - k8s-gpu-4.ucsc.edu
      #           - k8s-gpu-5.ucsc.edu
      #         - key: nvidia.com/gpu.product
      #           operator: In
      #           values:
      #           - NVIDIA-RTX-A6000
      tolerations:
      - effect: NoSchedule
        key: nautilus.io/gilpin-lab
        operator: Exists
# Command to run before creating deployment: mypass is the password for entry, Quotations is turn-shared-secret
# kubectl create secret generic my-pass --from-literal=my-pass=mypass --from-literal=turn-secret="cup5dBCknRijK4roVJSEUFikEpu8xdKAqGxubX7CbZ2YkpgC4zFsU5Ukqf97PHsE"
